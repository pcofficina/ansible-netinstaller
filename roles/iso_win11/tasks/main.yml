---
# tasks file for role/iso-windows
- name: Ensure Windows 11 root directory exists [{{ iso_win11_basepath_dir }}]
  ansible.builtin.file:
    path: "{{ iso_win11_basepath_dir }}"
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Get status of ISO {{ iso_win11_filename }}
  ansible.builtin.stat:
    path: "{{ iso_win11_basepath_dir }}/{{ iso_win11_filename }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: iso_win11_file_status

# - name: Check if ISO file is missing
#   ansible.builtin.set_fact:
#     iso_file_missing: "{{ not iso_file_status.stat.exists }}"
#   changed_when: iso_file_missing

- name: Stop Samba service
  ansible.builtin.systemd_service:
    name: smbd
    state: stopped
  register: iso_win11_smbd_stop_result
  when: iso_win11_file_status.stat.exists

- name: Umount ISO {{ iso_win11_filename }}
  ansible.posix.mount:
    path: "{{ iso_win11_basepath_dir }}/iso"
    state: unmounted
  when: iso_win11_file_status.stat.exists and iso_win11_smbd_stop_result.state == "stopped"

- name: Mount ISO {{ iso_win11_filename }}
  ansible.posix.mount:
    path: "{{ iso_win11_basepath_dir }}/iso"
    src: "{{ iso_win11_basepath_dir }}/{{ iso_win11_filename }}"
    fstype: auto # usually iso9660 but win use udf so: auto
    opts: ro
    state: mounted

# - name: Copy boot files
#   ansible.posix.synchronize:
#     src: files/
#     dest: "{{ iso_win11_basepath_dir }}/"

- name: Copy autoinstall files
  ansible.builtin.copy:
    src: files/
    dest: "{{ iso_win11_basepath_dir }}/"
    owner: root
    group: root
    mode: '0644'

- name: Deploy install.bat template
  ansible.builtin.template:
    src: templates/install.bat.j2
    dest: "{{ iso_win11_basepath_dir }}/install.bat"
    mode: '0644'

- name: Ensure win11.ipxe is not present anymore
  ansible.builtin.file:
    path: "{{ iso_win11_basepath_dir }}/win11.ipxe"
    state: absent
